{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"object_alloc","disambiguator":[1123232368962273367,389403289217419044]},"crate_root":"/Users/fancy/.cargo/registry/src/github.com-1ecc6299db9ec823/object-alloc-0.1.0/src","external_crates":[{"file_name":"/Users/fancy/.cargo/registry/src/github.com-1ecc6299db9ec823/object-alloc-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[6894298996120199587,12678752264247089934]}},{"file_name":"/Users/fancy/.cargo/registry/src/github.com-1ecc6299db9ec823/object-alloc-0.1.0/src/lib.rs","num":2,"id":{"name":"alloc","disambiguator":[10412599863926677198,6701357697995968742]}},{"file_name":"/Users/fancy/.cargo/registry/src/github.com-1ecc6299db9ec823/object-alloc-0.1.0/src/lib.rs","num":3,"id":{"name":"std_unicode","disambiguator":[2177297892015839832,13498433282424380559]}}],"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":307,"byte_end":9312,"line_start":7,"line_end":176,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":307,"byte_end":9312,"line_start":7,"line_end":176,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/fancy/.cargo/registry/src/github.com-1ecc6299db9ec823/object-alloc-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":38},{"krate":0,"index":56},{"krate":0,"index":52},{"krate":0,"index":48},{"krate":0,"index":44},{"krate":0,"index":40},{"krate":0,"index":12},{"krate":0,"index":20},{"krate":0,"index":30}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":307,"byte_end":317,"line_start":7,"line_end":7,"column_start":1,"column_end":11}},{"value":"feature(alloc, allocator_api)","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":318,"byte_end":351,"line_start":8,"line_end":8,"column_start":1,"column_end":34}},{"value":"feature(core_intrinsics)","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":352,"byte_end":380,"line_start":9,"line_end":9,"column_start":1,"column_end":29}}]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":833,"byte_end":842,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Exhausted","qualname":"::Exhausted","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error indicating that no memory is available.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":822,"byte_end":843,"line_start":21,"line_end":21,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":822,"byte_end":843,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3057,"byte_end":3068,"line_start":56,"line_end":56,"column_start":18,"column_end":29},"name":"ObjectAlloc","qualname":"::ObjectAlloc","value":"ObjectAlloc<T>","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18}],"decl_id":null,"docs":" Allocators which allocate objects of a particular type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4087,"byte_end":4092,"line_start":74,"line_end":74,"column_start":15,"column_end":20},"name":"alloc","qualname":"::ObjectAlloc::alloc","value":"fn (&mut self) -> Result<*mut T, Exhausted>","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Allocators which allocate objects of a particular type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4882,"byte_end":4889,"line_start":87,"line_end":87,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::ObjectAlloc::dealloc","value":"fn (&mut self, x: *mut T) -> ()","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Allocators which allocate objects of a particular type.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6018,"byte_end":6021,"line_start":106,"line_end":106,"column_start":8,"column_end":11},"name":"oom","qualname":"::ObjectAlloc::oom","value":"fn (&mut self) -> !","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Allocators which allocate objects of a particular type.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6643,"byte_end":6661,"line_start":118,"line_end":118,"column_start":18,"column_end":36},"name":"UntypedObjectAlloc","qualname":"::UntypedObjectAlloc","value":"UntypedObjectAlloc","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28}],"decl_id":null,"docs":" An allocator for objects whose type or size is not known at compile time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6922,"byte_end":6928,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"layout","qualname":"::UntypedObjectAlloc::layout","value":"fn (&self) -> Layout","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" An allocator for objects whose type or size is not known at compile time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7121,"byte_end":7126,"line_start":130,"line_end":130,"column_start":15,"column_end":20},"name":"alloc","qualname":"::UntypedObjectAlloc::alloc","value":"fn (&mut self) -> Result<*mut u8, Exhausted>","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" An allocator for objects whose type or size is not known at compile time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7401,"byte_end":7408,"line_start":136,"line_end":136,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::UntypedObjectAlloc::dealloc","value":"fn (&mut self, x: *mut u8) -> ()","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" An allocator for objects whose type or size is not known at compile time.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8538,"byte_end":8541,"line_start":155,"line_end":155,"column_start":8,"column_end":11},"name":"oom","qualname":"::UntypedObjectAlloc::oom","value":"fn (&mut self) -> !","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" An allocator for objects whose type or size is not known at compile time.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8634,"byte_end":8645,"line_start":160,"line_end":160,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,85,115,101,114,115,47,102,97,110,99,121,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,111,98,106,101,99,116,45,97,108,108,111,99,45,48,46,49,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8634,"byte_end":8645,"line_start":160,"line_end":160,"column_start":39,"column_end":50},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":12},"to":{"krate":0,"index":20}}]}